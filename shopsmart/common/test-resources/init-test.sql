CREATE TABLE IF NOT EXISTS ss_user (
  USERID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  USERNAME VARCHAR(45) NOT NULL,
  LOGINEMAIL VARCHAR(45),
  CURRENTPASSWORD VARCHAR(45) NOT NULL,
  DATECREATED TIMESTAMP NOT NULL,
  DATEUPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATEDBY INTEGER NOT NULL
);

CREATE UNIQUE INDEX PUBLIC.SS_USER_USERNAME_UNIQUE ON ss_user (USERNAME);
CREATE UNIQUE INDEX PUBLIC.SS_USER_LOGINEMAIL_UNIQUE ON ss_user (LOGINEMAIL);
CREATE INDEX PUBLIC.SS_USER_DATECREATED_USER ON ss_user (DATECREATED);

CREATE TABLE IF NOT EXISTS ss_userprofile (
  PROFILEID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  USERID INTEGER NOT NULL,
  FIRSTNAME VARCHAR(45) NOT NULL,
  LASTNAME VARCHAR(45) NOT NULL,
  EMAIL VARCHAR(45) NOT NULL,
  ALTERNATEEMAIL VARCHAR(45) NOT NULL,
  PRIMARYPHONE VARCHAR(15) NOT NULL,
  ALTERNATEPHONE VARCHAR(15),
  PRIMARYADDRESS INTEGER NOT NULL,
  ALTERNATEADDRESS INTEGER,
  TIMEZONE VARCHAR(45) NOT NULL,
  DATECREATED TIMESTAMP NOT NULL,
  DATEUPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATEDBY INTEGER NOT NULL,
  CONSTRAINT SS_PROFILE_USER_USERID FOREIGN KEY (USERID) REFERENCES ss_user (USERID)
);

CREATE UNIQUE INDEX PUBLIC.SS_PROFILE_PROFILE_ID_UNIQUE ON ss_userprofile (PROFILEID);
CREATE UNIQUE INDEX PUBLIC.SS_PROFLE_USERID_UNIQUE ON ss_userprofile (USERID);
CREATE UNIQUE INDEX PUBLIC.SS_PROFILE_EMAIL_UNIQUE ON ss_userprofile (EMAIL);
CREATE UNIQUE INDEX PUBLIC.SS_PROFILE_ALTERNATEEMAIL ON ss_userprofile (ALTERNATEEMAIL);
CREATE INDEX PUBLIC.SS_PROFLE_FIRSTNAME ON ss_userprofile (FIRSTNAME);
CREATE INDEX PUBLIC.SS_PROFILE_LASTNAME ON ss_userprofile (LASTNAME);
CREATE INDEX PUBLIC.SS_PROFILE_DATECREATED ON ss_userprofile (DATECREATED);


CREATE TABLE IF NOT EXISTS ss_address (
  ADDRESSID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  ADDRESSTYPE VARCHAR(45) NOT NULL,
  ADDRESS VARCHAR(150) NOT NULL,
  CITY VARCHAR(45) NOT NULL,
  STATE VARCHAR(45) NOT NULL,
  ZIP VARCHAR(45) NOT NULL,
  COUNTRY VARCHAR(45) NOT NULL,
  DATECREATED TIMESTAMP NOT NULL,
  DATEUPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATEDBY INTEGER NOT NULL
);

CREATE INDEX PUBLIC.SS_ADDRESS_CITY ON ss_address (CITY);
CREATE INDEX PUBLIC.SS_ADDRESS_STATE ON ss_address (STATE);
CREATE INDEX PUBLIC.SS_ADDRESS_COUNTRY ON ss_address (COUNTRY);
CREATE INDEX PUBLIC.SS_ADDRESS_ZIP ON ss_address (ZIP);
CREATE INDEX PUBLIC.SS_ADDRESS_DATECREATED ON ss_address (DATECREATED);

CREATE TABLE IF NOT EXISTS ss_password (
  PASSWORDID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  USERID INTEGER NOT NULL,
  PASSWORD VARCHAR(200) NOT NULL,
  CREATEDDATE TIMESTAMP NOT NULL,
  UPDATEDDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATEDBY INTEGER NOT NULL,
  CONSTRAINT CS_PASSWORD_USERID FOREIGN KEY (USERID) REFERENCES ss_user (USERID)
);

CREATE INDEX PUBLIC.SS_PASSWORD_USERID ON ss_password (USERID);
CREATE INDEX PUBLIC.SS_PASSWORD_UPDATEDDATE ON ss_password (UPDATEDDATE);

